# TODO здесь писать код

class Stack:
    def __init__(self):
        self.items = []
    def add_elem(self, item : list):
        self.items.append(item)

    def __str__(self):
        return f'{self.items}'

class TaskManager:
    def __init__(self, task : str, priority: int = 0):
        self.task = ('task', priority)
    def __str__(self):
        return f'Задача: {self.task}, Приоритет: {self.priority}'

st = Stack()
st.add_elem(("сделать уборку", 4))
st.add_elem(("помыть посуду", 4))
st.add_elem(("отдохнуть", 1))
st.add_elem(("поесть", 2))
st.add_elem(("сдать ДЗ", 2))

print(st)

# Сделать сортировку
print(sorted(st.items, key=lambda x: x[1]))

'''
Задача 5. Стек
Что нужно сделать
Мы уже говорили, что в программировании нередко необходимо создавать свои собственные структуры данных на основе уже существующих. 
Одной из таких базовых структур является стек. 
Стек — это абстрактный тип данных, представляющий собой список элементов, организованных по принципу LIFO (англ. last in — first out,
 «последним пришёл — первым вышел»).
Простой пример: стек из книг на столе. Единственной книгой, обложка которой видна, является самая верхняя. Чтобы получить доступ, например, 
к третьей снизу книге, нам нужно убрать все книги, лежащие сверху, одну за другой.
Напишите класс, который реализует стек и его возможности (достаточно будет добавления и удаления элемента). 
После этого напишите ещё один класс — «Менеджер задач». В менеджере задач можно выполнить команду «новая задача», в которую передаётся сама задача (str) 
и её приоритет (int). Сам менеджер работает на основе стека (не наследование). При выводе менеджера в консоль все задачи должны быть отсортированы 
по следующему приоритету: чем меньше число, тем выше задача.

Вот пример основной программы:
manager = TaskManager()
manager.new_task("сделать уборку", 4)
manager.new_task("помыть посуду", 4)
manager.new_task("отдохнуть", 1)
manager.new_task("поесть", 2)
manager.new_task("сдать ДЗ", 2)
print(manager)

Результат:
1 — отдохнуть
2 — поесть; сдать ДЗ
4 — сделать уборку; помыть посуду
Дополнительно: реализуйте также удаление задач и подумайте, что делать с дубликатами.'''